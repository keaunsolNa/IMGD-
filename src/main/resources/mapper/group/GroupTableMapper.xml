<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nks.imgd.mapper.group.GroupTableMapper">

    <select id="findGroupName" resultType="com.nks.imgd.dto.dataDTO.GroupTableWithMstUserNameDTO">
        SELECT T1.GROUP_ID
             , T1.GROUP_NM
          FROM GROUP_TABLE T1
             , GROUP_USER T2
         WHERE T1.GROUP_ID = T2.GROUP_ID
           AND T2.USER_ID = #{userId}
           AND T1.GROUP_ID NOT IN ( SELECT GROUP_ID
                                     FROM FILE_TABLE
                                    WHERE TYPE = 'DIR'
                                      AND FILE_PATH = '/GROUP_IMG'
                                      AND PARENT_ID = 2
                                  )
    </select>

    <select id="findGroupWhatInside" resultType="com.nks.imgd.dto.dataDTO.GroupTableWithMstUserNameDTO">
        SELECT T1.GROUP_ID
             , T1.GROUP_NM
             , F_GET_USER_NM(T1.GROUP_MST_USER_ID) AS `GROUP_MST_USER_NM`
             , T1.GROUP_MST_USER_ID
             , T1.REG_DTM
          FROM GROUP_TABLE T1
          JOIN GROUP_USER T2
            ON T1.GROUP_ID = T2.GROUP_ID
           AND T2.USER_ID = #{userId}
    </select>

    <select id="findGroupUserWhatInside" resultType="com.nks.imgd.dto.dataDTO.GroupUserWithNameDTO">
        SELECT T1.USER_ID
             , F_GET_USER_NM(T1.USER_ID) AS `USER_NM`
             , T1.REG_DTM
        FROM GROUP_USER T1
        WHERE T1.GROUP_ID = #{groupId}
    </select>

    <select id="findGroupByGroupId" resultType="com.nks.imgd.dto.dataDTO.GroupTableWithMstUserNameDTO">
        SELECT GROUP_ID
             , GROUP_NM
             , GROUP_MST_USER_ID
             , REG_DTM
             , REG_ID
             , MOD_DTM
             , MOD_ID
          FROM GROUP_TABLE
         WHERE GROUP_ID = #{groupId}
    </select>


    <insert id="makeNewGroup"
            useGeneratedKeys="true"
            keyProperty="group.groupId"
            keyColumn="GROUP_ID">
        INSERT
          INTO GROUP_TABLE
          ( GROUP_NM
          , GROUP_MST_USER_ID
          , REG_DTM
          , REG_ID
          , MOD_DTM
          , MOD_ID
          )
          VALUES
          (
            #{group.groupNm}
          , #{group.groupMstUserId}
          , DATE_FORMAT(NOW(), '%Y%m%d')
          , #{group.groupMstUserId}
          , DATE_FORMAT(NOW(), '%Y%m%d')
          , #{group.groupMstUserId}
          )
    </insert>

    <insert id="makeNewGroupUserTable">
      INSERT
      INTO GROUP_USER
      ( GROUP_ID
      , USER_ID
      , REG_DTM
      , REG_ID
      , MOD_DTM
      , MOD_ID
      )
      VALUES
        (
          #{group.groupId}
        , #{userId}
        , DATE_FORMAT(NOW(), '%Y%m%d')
        , #{group.groupMstUserId}
        , DATE_FORMAT(NOW(), '%Y%m%d')
        , #{group.groupMstUserId}
        )
    </insert>

    <select id="isUserCheck">
        SELECT COUNT(GROUP_ID)
          FROM GROUP_USER
         WHERE GROUP_ID = #{group.groupId}
           AND USER_ID  = #{userId}
    </select>

    <select id="countGroupUser">
        SELECT COUNT(T2.USER_ID)
          FROM GROUP_TABLE T1
             , GROUP_USER  T2
         WHERE T1.GROUP_ID = #{group.groupId}
           AND T1.GROUP_ID = T2.GROUP_ID
    </select>

    <delete id="deleteGroupUser">
      DELETE
        FROM GROUP_USER
       WHERE GROUP_ID = #{group.groupId}
         AND USER_ID  = #{group.userId}
    </delete>

    <delete id="deleteGroupTable">
        DELETE
          FROM GROUP_TABLE
         WHERE GROUP_ID = #{group.groupId}
    </delete>


    <update id="changeMstUserGroup">
        UPDATE GROUP_TABLE
           SET GROUP_MST_USER_ID = #{userId}
             , MOD_DTM = DATE_FORMAT(NOW(), '%Y%m%d')
             , MOD_ID = #{group.groupMstUserId}
         WHERE GROUP_ID = #{group.groupId}
    </update>



</mapper>
