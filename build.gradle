plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.dogfeetbirdfeet'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {

    // ✅ REST API용
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // ✅ Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // ✅ MyBatis + DB
    implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.5"
    implementation("org.springframework.boot:spring-boot-starter-jdbc")   // JDBC 기본 지원
    runtimeOnly 'com.mysql:mysql-connector-j'

    // ✅ Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // ✅ JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // ✅ Oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    // ✅ Image Processing
    implementation "com.sksamuel.scrimage:scrimage-core:4.3.0"
    implementation "com.sksamuel.scrimage:scrimage-webp:4.3.0"

    // ✅ Devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'


    // ✅ TEST
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.5"

    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.testcontainers:mysql"

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
